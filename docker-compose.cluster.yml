version: '3.8'

services:
  blockdb-node1:
    build: .
    image: blockdb:latest
    container_name: blockdb-node1
    ports:
      - "8081:8080"
      - "9091:9090"
    volumes:
      - blockdb_node1_data:/var/lib/blockdb
      - blockdb_node1_logs:/var/log/blockdb
    environment:
      - BLOCKDB_NODE_ID=node1
      - BLOCKDB_HOST=0.0.0.0
      - BLOCKDB_PORT=8080
      - BLOCKDB_PEERS=blockdb-node2:8080,blockdb-node3:8080
      - BLOCKDB_HEARTBEAT_INTERVAL=150
      - BLOCKDB_ELECTION_TIMEOUT=300
      - BLOCKDB_LOG_LEVEL=info
      - BLOCKDB_WAIT_FOR_PEERS=false  # Leader starts first
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    networks:
      - blockdb-cluster

  blockdb-node2:
    build: .
    image: blockdb:latest
    container_name: blockdb-node2
    ports:
      - "8082:8080"
      - "9092:9090"
    volumes:
      - blockdb_node2_data:/var/lib/blockdb
      - blockdb_node2_logs:/var/log/blockdb
    environment:
      - BLOCKDB_NODE_ID=node2
      - BLOCKDB_HOST=0.0.0.0
      - BLOCKDB_PORT=8080
      - BLOCKDB_PEERS=blockdb-node1:8080,blockdb-node3:8080
      - BLOCKDB_HEARTBEAT_INTERVAL=150
      - BLOCKDB_ELECTION_TIMEOUT=300
      - BLOCKDB_LOG_LEVEL=info
      - BLOCKDB_WAIT_FOR_PEERS=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - blockdb-node1
    restart: unless-stopped
    networks:
      - blockdb-cluster

  blockdb-node3:
    build: .
    image: blockdb:latest
    container_name: blockdb-node3
    ports:
      - "8083:8080"
      - "9093:9090"
    volumes:
      - blockdb_node3_data:/var/lib/blockdb
      - blockdb_node3_logs:/var/log/blockdb
    environment:
      - BLOCKDB_NODE_ID=node3
      - BLOCKDB_HOST=0.0.0.0
      - BLOCKDB_PORT=8080
      - BLOCKDB_PEERS=blockdb-node1:8080,blockdb-node2:8080
      - BLOCKDB_HEARTBEAT_INTERVAL=150
      - BLOCKDB_ELECTION_TIMEOUT=300
      - BLOCKDB_LOG_LEVEL=info
      - BLOCKDB_WAIT_FOR_PEERS=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 25s
    depends_on:
      - blockdb-node1
      - blockdb-node2
    restart: unless-stopped
    networks:
      - blockdb-cluster

  # Load balancer for the cluster
  nginx:
    image: nginx:alpine
    container_name: blockdb-lb
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - blockdb-node1
      - blockdb-node2
      - blockdb-node3
    restart: unless-stopped
    networks:
      - blockdb-cluster

volumes:
  blockdb_node1_data:
    driver: local
  blockdb_node1_logs:
    driver: local
  blockdb_node2_data:
    driver: local
  blockdb_node2_logs:
    driver: local
  blockdb_node3_data:
    driver: local
  blockdb_node3_logs:
    driver: local

networks:
  blockdb-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16